@model MyHomeWeb.Models.NeoPixelCommand

@{
    ViewBag.Title = "Publish";
}

<h2>Publish</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>NeoPixelCommand</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.BaseColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Html.DisplayFor(model => model.DeviceId) </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlashMode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.FlashMode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FlashMode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BaseColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BaseColor, new { @class = "form-control", type = "color" })
                @Html.ValidationMessageFor(model => model.BaseColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlashColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FlashColor,  new { @class = "form-control", type = "color" } )
                @Html.ValidationMessageFor(model => model.FlashColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Execute" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
